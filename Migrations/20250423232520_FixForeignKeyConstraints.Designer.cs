// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaGestionDeportiva.Data;

#nullable disable

namespace SistemaGestionDeportiva.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250423232520_FixForeignKeyConstraints")]
    partial class FixForeignKeyConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.AsistenciaEntrenamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Asistio")
                        .HasColumnType("bit");

                    b.Property<int>("EntrenamientoId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int?>("JugadorId1")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntrenamientoId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("JugadorId1");

                    b.ToTable("AsistenciasEntrenamiento");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenador", b =>
                {
                    b.Property<int>("EntrenadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntrenadorId"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EntrenadorId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenamiento", b =>
                {
                    b.Property<int>("EntrenamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntrenamientoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("LigaId")
                        .HasColumnType("int");

                    b.Property<int?>("LigaId1")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrenamientoId");

                    b.HasIndex("EntrenadorId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("LigaId");

                    b.HasIndex("LigaId1");

                    b.ToTable("Entrenamientos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Equipo", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipoId"));

                    b.Property<string>("ColorPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorSecundario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscudoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GolesAFavor")
                        .HasColumnType("int");

                    b.Property<int>("GolesEnContra")
                        .HasColumnType("int");

                    b.Property<int>("LigaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidosEmpatados")
                        .HasColumnType("int");

                    b.Property<int>("PartidosGanados")
                        .HasColumnType("int");

                    b.Property<int>("PartidosJugados")
                        .HasColumnType("int");

                    b.Property<int>("PartidosPerdidos")
                        .HasColumnType("int");

                    b.HasKey("EquipoId");

                    b.HasIndex("LigaId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.EquipoEstadisticas", b =>
                {
                    b.Property<int>("EquipoEstadisticasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipoEstadisticasId"));

                    b.Property<int?>("GolesAFavor")
                        .HasColumnType("int");

                    b.Property<int?>("GolesEnContra")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartidosEmpatados")
                        .HasColumnType("int");

                    b.Property<int?>("PartidosGanados")
                        .HasColumnType("int");

                    b.Property<int?>("PartidosPerdidos")
                        .HasColumnType("int");

                    b.HasKey("EquipoEstadisticasId");

                    b.ToTable("EquiposEstadisticas");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.EstadisticaJugador", b =>
                {
                    b.Property<int>("EstadisticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadisticaId"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int?>("Minuto")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<bool>("TarjetaAmarilla")
                        .HasColumnType("bit");

                    b.Property<bool>("TarjetaRoja")
                        .HasColumnType("bit");

                    b.HasKey("EstadisticaId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidoId");

                    b.ToTable("EstadisticasJugador");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.EstadisticaPartido", b =>
                {
                    b.Property<int>("EstadisticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadisticaId"));

                    b.Property<int>("Asistencias")
                        .HasColumnType("int");

                    b.Property<int>("Goles")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("MinutosJugados")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasAmarillas")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasRojas")
                        .HasColumnType("int");

                    b.HasKey("EstadisticaId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidoId");

                    b.ToTable("EstadisticasPartido");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Gol", b =>
                {
                    b.Property<int>("GolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GolId"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<bool>("EsAutogol")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPenal")
                        .HasColumnType("bit");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.HasKey("GolId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Goles");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Jugador", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroCamiseta")
                        .HasColumnType("int");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("JugadorId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.JugadorEstadisticas", b =>
                {
                    b.Property<int>("JugadorEstadisticasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorEstadisticasId"));

                    b.Property<int?>("Asistencias")
                        .HasColumnType("int");

                    b.Property<int?>("Goles")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartidosJugados")
                        .HasColumnType("int");

                    b.Property<double?>("PromedioGoles")
                        .HasColumnType("float");

                    b.Property<int?>("TarjetasAmarillas")
                        .HasColumnType("int");

                    b.Property<int?>("TarjetasRojas")
                        .HasColumnType("int");

                    b.HasKey("JugadorEstadisticasId");

                    b.ToTable("JugadoresEstadisticas");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Liga", b =>
                {
                    b.Property<int>("LigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LigaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LigaId");

                    b.ToTable("Ligas");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.MetricaEntrenamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntrenamientoId")
                        .HasColumnType("int");

                    b.Property<int?>("EntrenamientoId1")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<string>("TipoMetrica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntrenamientoId");

                    b.HasIndex("EntrenamientoId1");

                    b.HasIndex("JugadorId");

                    b.ToTable("MetricasEntrenamientos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Partido", b =>
                {
                    b.Property<int>("PartidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidoId"));

                    b.Property<int>("EquipoLocalId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoVisitanteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("FaltasLocal")
                        .HasColumnType("int");

                    b.Property<int>("FaltasVisitante")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GolesLocal")
                        .HasColumnType("int");

                    b.Property<int?>("GolesVisitante")
                        .HasColumnType("int");

                    b.Property<int>("LigaId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Penales")
                        .HasColumnType("bit");

                    b.Property<int>("PosesionLocal")
                        .HasColumnType("int");

                    b.Property<int>("PosesionVisitante")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasAmarillasLocal")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasAmarillasVisitante")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasRojasLocal")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasRojasVisitante")
                        .HasColumnType("int");

                    b.Property<bool>("TiempoExtra")
                        .HasColumnType("bit");

                    b.Property<int>("TirosAlArcoLocal")
                        .HasColumnType("int");

                    b.Property<int>("TirosAlArcoVisitante")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartidoId");

                    b.HasIndex("EquipoLocalId");

                    b.HasIndex("EquipoVisitanteId");

                    b.HasIndex("LigaId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.AsistenciaEntrenamiento", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Entrenamiento", "Entrenamiento")
                        .WithMany("Asistencias")
                        .HasForeignKey("EntrenamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", "Jugador")
                        .WithMany()
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", null)
                        .WithMany("Asistencias")
                        .HasForeignKey("JugadorId1");

                    b.Navigation("Entrenamiento");

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenador", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "Equipo")
                        .WithMany("Entrenadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Equipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenamiento", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Entrenador", "Entrenador")
                        .WithMany("Entrenamientos")
                        .HasForeignKey("EntrenadorId");

                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Liga", "Liga")
                        .WithMany()
                        .HasForeignKey("LigaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Liga", null)
                        .WithMany("Entrenamientos")
                        .HasForeignKey("LigaId1");

                    b.Navigation("Entrenador");

                    b.Navigation("Equipo");

                    b.Navigation("Liga");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Equipo", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Liga", "Liga")
                        .WithMany("Equipos")
                        .HasForeignKey("LigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Liga");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.EstadisticaJugador", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "Equipo")
                        .WithMany("EstadisticasJugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", "Jugador")
                        .WithMany("EstadisticasJugadores")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Partido", "Partido")
                        .WithMany("EstadisticasJugadores")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Jugador");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.EstadisticaPartido", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", "Jugador")
                        .WithMany("Estadisticas")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Partido", "Partido")
                        .WithMany("Estadisticas")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jugador");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Gol", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "Equipo")
                        .WithMany("Goles")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", "Jugador")
                        .WithMany("Goles")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Partido", "Partido")
                        .WithMany("Goles")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Jugador");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Jugador", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Equipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.MetricaEntrenamiento", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Entrenamiento", "Entrenamiento")
                        .WithMany()
                        .HasForeignKey("EntrenamientoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Entrenamiento", null)
                        .WithMany("Metricas")
                        .HasForeignKey("EntrenamientoId1");

                    b.HasOne("SistemaGestionDeportiva.Models.Jugador", "Jugador")
                        .WithMany()
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Entrenamiento");

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Partido", b =>
                {
                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "EquipoLocal")
                        .WithMany("PartidosLocal")
                        .HasForeignKey("EquipoLocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Equipo", "EquipoVisitante")
                        .WithMany("PartidosVisitante")
                        .HasForeignKey("EquipoVisitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaGestionDeportiva.Models.Liga", "Liga")
                        .WithMany("Partidos")
                        .HasForeignKey("LigaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipoLocal");

                    b.Navigation("EquipoVisitante");

                    b.Navigation("Liga");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenador", b =>
                {
                    b.Navigation("Entrenamientos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Entrenamiento", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Metricas");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Equipo", b =>
                {
                    b.Navigation("Entrenadores");

                    b.Navigation("EstadisticasJugadores");

                    b.Navigation("Goles");

                    b.Navigation("Jugadores");

                    b.Navigation("PartidosLocal");

                    b.Navigation("PartidosVisitante");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Jugador", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Estadisticas");

                    b.Navigation("EstadisticasJugadores");

                    b.Navigation("Goles");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Liga", b =>
                {
                    b.Navigation("Entrenamientos");

                    b.Navigation("Equipos");

                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("SistemaGestionDeportiva.Models.Partido", b =>
                {
                    b.Navigation("Estadisticas");

                    b.Navigation("EstadisticasJugadores");

                    b.Navigation("Goles");
                });
#pragma warning restore 612, 618
        }
    }
}
